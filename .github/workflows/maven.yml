# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  # push:
  #   branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    # This schedule follows the California time (PDT [UTC-7]).
    # Schedule on PDT: 03:00, 07:00, 11:00, 15:00, 19:00, 23:00
    - cron: '*/20 02,06,10,14,18,22 * * *'

jobs:
  run_tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      max-parallel: 1
      matrix:
        language: [java, java_comp, c_sharp, c_sharp_comp, javascript, python, ruby]
    steps:
      - uses: actions/checkout@v3
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      - uses: actions/setup-java@v3
        if: ${{ matrix.language == 'java' || matrix.language == 'java_comp' }}
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Maven
        if: ${{ matrix.language == 'java' || matrix.language == 'java_comp' }}
        run: sudo apt-get install -y maven
      - name: Set up .NET core
        if: ${{ matrix.language == 'c_sharp' || matrix.language == 'c_sharp_comp' }}
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7.0
          dotnet-quality: ga
      - name: Set up node.js
        if: ${{ matrix.language == 'javascript' }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.1
      - name: Download npm dependencies
        if: ${{ matrix.language == 'javascript' }}
        run: |
          cd src/test/JavaScript; npm install; cd -
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Install pipenv
        run: |
          pip3 install --user pipenv
      - name: Download python dependencies
        run: |
          pipenv install
      - name: Set up ruby
        if: ${{ matrix.language == 'ruby' }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
      - name: Download ruby dependencies
        if: ${{ matrix.language == 'ruby' }}
        run: |
          cd src/test/Ruby; bundle install
      # Launch the tests
      - name: Launch ${{ matrix.language }} Test
        run: pipenv run python telemetry.py
        timeout-minutes: 10
        env:
          TARGET_LANGUAGE: ${{ matrix.language }}
      - name: Upload test result artifacts
        uses: actions/upload-artifact@v3
        with:
          name: real-test-run
          path: |
            *.csv
      - name: Clean up; delete already uploaded csv files
        run: |
          rm *.csv
